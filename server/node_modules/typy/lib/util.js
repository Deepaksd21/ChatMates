'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _arguments = arguments;
var stripKeyFromArrayPath = exports.stripKeyFromArrayPath = function stripKeyFromArrayPath(path) {
  return path.split('[').shift();
};

var stripArrayIndexFromArrayPath = exports.stripArrayIndexFromArrayPath = function stripArrayIndexFromArrayPath(path) {
  var matches = /\[([^)]+)\]/.exec(path);
  if (Array.isArray(matches) && matches.length >= 1) return Number(matches[1]);
  return path;
};

var getNestedObject = exports.getNestedObject = function getNestedObject(obj, dotSeparatedKeys) {
  if (_arguments.length > 1 && typeof dotSeparatedKeys !== 'string') return undefined;
  if (typeof obj !== 'undefined' && typeof dotSeparatedKeys === 'string') {
    var pathArr = dotSeparatedKeys.split('.');
    pathArr.forEach(function (key, idx, arr) {
      if (typeof key === 'string' && key.includes('[')) {
        try {
          arr.splice(idx + 1, 0, Number(/\[([^)]+)\]/.exec(key)[1]));
          arr[idx] = key.slice(0, -3); // eslint-disable-line no-param-reassign
        } catch (e) {
          // do nothing
        }
      }
    });
    // eslint-disable-next-line no-param-reassign, no-confusing-arrow
    obj = pathArr.reduce(function (o, key) {
      return o && o[key] !== 'undefined' ? o[key] : undefined;
    }, obj);
  }
  return obj;
};

var printAllMatchedTypes = exports.printAllMatchedTypes = function printAllMatchedTypes(obj) {
  // eslint-disable-next-line
  console.log('\n    isUndefined: ' + obj.isUndefined + '\n    isDefined: ' + obj.isDefined + '\n    isNull: ' + obj.isNull + '\n    isNullOrUndefined: ' + obj.isNullOrUndefined + '\n    isBoolean: ' + obj.isBoolean + '\n    isTrue: ' + obj.isTrue + '\n    isFalse: ' + obj.isFalse + '\n    isTruthy: ' + obj.isTruthy + '\n    isFalsy: ' + obj.isFalsy + '\n    isObject: ' + obj.isObject + '\n    isEmptyObject: ' + obj.isEmptyObject + '\n    isString: ' + obj.isString + '\n    isEmptyString: ' + obj.isEmptyString + '\n    isNumber: ' + obj.isNumber + '\n    isArray: ' + obj.isArray + '\n    isEmptyArray: ' + obj.isEmptyArray + '\n    isFunction: ' + obj.isFunction + '\n    ');
};