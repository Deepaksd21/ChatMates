'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.traverseAndDelete = exports.deleteKey = exports.stripArrayIndexFromArrayPath = exports.stripKeyFromArrayPath = exports.stripTrailingKeysFromPath = exports.stripFirstKeyFromPath = undefined;

var _typy = require('typy');

var _typy2 = _interopRequireDefault(_typy);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var stripFirstKeyFromPath = exports.stripFirstKeyFromPath = function stripFirstKeyFromPath(path) {
  return (0, _typy2.default)(path).safeString.split('.').shift();
}; /* eslint-disable no-param-reassign */
var stripTrailingKeysFromPath = exports.stripTrailingKeysFromPath = function stripTrailingKeysFromPath(path) {
  return (0, _typy2.default)(path).safeString.slice((0, _typy2.default)(path).safeString.split('.').shift().length + 1);
};

var stripKeyFromArrayPath = exports.stripKeyFromArrayPath = function stripKeyFromArrayPath(path) {
  return (0, _typy2.default)(path).safeString.split('[').shift();
};

var stripArrayIndexFromArrayPath = exports.stripArrayIndexFromArrayPath = function stripArrayIndexFromArrayPath(path) {
  var matches = /\[([^)]+)\]/.exec((0, _typy2.default)(path).safeString);
  if ((0, _typy2.default)(matches).isArray && matches.length >= 1) return Number(matches[1]);
  return path;
};

var deleteKey = exports.deleteKey = function deleteKey(obj, key) {
  if (key.includes('[')) {
    var objKey = stripKeyFromArrayPath(key);
    var arrIndex = stripArrayIndexFromArrayPath(key);
    if ((0, _typy2.default)(obj[objKey]).isArray && obj[objKey].length >= arrIndex + 1) {
      obj[objKey].splice(arrIndex, 1);
    }
  } else if ((0, _typy2.default)(obj[key]).isDefined) {
    delete obj[key];
  }
  return obj;
};

var traverseAndDelete = exports.traverseAndDelete = function traverseAndDelete(obj, keyPath) {
  var key = stripFirstKeyFromPath(keyPath);
  var trailingKeys = stripTrailingKeysFromPath(keyPath);

  if ((0, _typy2.default)(trailingKeys).isEmptyString) {
    deleteKey(obj, key);
  } else if ((0, _typy2.default)(obj[key]).isDefined) {
    if ((0, _typy2.default)(obj[key]).isArray) {
      obj[key].forEach(function (item) {
        traverseAndDelete(item, trailingKeys); // TODO
      });
    } else {
      traverseAndDelete(obj[key], trailingKeys);
    }
  } else if (key.includes('[')) {
    if ((0, _typy2.default)(obj[stripKeyFromArrayPath(key)]).isArray && obj[stripKeyFromArrayPath(key)].length >= stripArrayIndexFromArrayPath(key) - 1) {
      traverseAndDelete(obj[stripKeyFromArrayPath(key)][stripArrayIndexFromArrayPath(key)], trailingKeys);
    }
  }
  return obj;
};